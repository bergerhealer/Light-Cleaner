<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.bergerkiller.bukkit</groupId>
        <artifactId>LightCleaner-parent</artifactId>
        <version>${revision}</version>
    </parent>

    <artifactId>LightCleaner</artifactId>
    <name>LightCleaner</name>
    <url>https://github.com/bergerhealer/light-cleaner/</url>
    <packaging>jar</packaging>

    <dependencies>
        <!-- Automatic cleaning handlers -->
        <dependency>
            <groupId>com.bergerkiller.bukkit</groupId>
            <artifactId>LightCleaner-handler-base</artifactId>
            <version>${revision}</version>
        </dependency>
        <dependency>
            <groupId>com.bergerkiller.bukkit</groupId>
            <artifactId>LightCleaner-handler-worldedit</artifactId>
            <version>${revision}</version>
        </dependency>
        <dependency>
            <groupId>com.bergerkiller.bukkit</groupId>
            <artifactId>LightCleaner-handler-fawe-v1</artifactId>
            <version>${revision}</version>
        </dependency>
    </dependencies>

    <!-- Build -->
    <build>
        <!-- Export artifact with name that includes the build number -->
        <finalName>${project.name}-${project.version}-${project.build.number}</finalName>
        <defaultGoal>clean install</defaultGoal>

        <!-- Resources (the filtering allows us to use project properties in plugin.yml) -->
        <resources>
            <resource>
                <directory>src/main/java</directory>
                <filtering>true</filtering>
                <includes>
                    <include>plugin.yml</include>
                </includes>
            </resource>
        </resources>

        <!-- Plugins -->
        <plugins>
            <!-- Generate a jar containing the source javadoc -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>3.0.1</version>
                <configuration>
                    <failOnError>false</failOnError>
                    <doclint>none</doclint>
                </configuration>
            </plugin>

            <!-- Generate a jar containing the java sources -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.0.1</version>
            </plugin>

            <!-- Compiling the source code -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${project.maven-compiler.version}</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <showWarnings>true</showWarnings>
                    <showDeprecation>true</showDeprecation>
                </configuration>
            </plugin>

            <!-- Combines this plugin jar and all dependencies into a single jar -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.2.0</version>
                <configuration>
                    <createDependencyReducedPom>true</createDependencyReducedPom>
                    <artifactSet>
                        <includes>
                            <include>com.bergerkiller.bukkit:LightCleaner-handler-*</include>
                        </includes>
                    </artifactSet>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <phase>package</phase>
                    </execution>
                </executions>
            </plugin>

            <!-- Clean up original artifacts (this is to make testing easier) -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <version>2.4.1</version>
                <executions>
                    <execution>
                        <id>auto-clean</id>
                        <phase>package</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                        <configuration>
                            <excludeDefaultDirectories>true</excludeDefaultDirectories>
                            <filesets>
                                <fileset>
                                    <directory>${project.build.directory}</directory>
                                    <includes>
                                        <include>original-*.jar</include>
                                    </includes>
                                    <followSymlinks>false</followSymlinks>
                                </fileset>
                            </filesets>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Copy the produced target to the static directory with just a base name -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.8</version>
                <executions>
                    <!-- Prepare the version-less output jar -->
                    <execution>
                        <id>version-less-jar</id>
                        <phase>package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <copy file="target/${project.name}-${project.version}-${project.build.number}.jar" tofile="target/static/${project.name}.jar"/>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
